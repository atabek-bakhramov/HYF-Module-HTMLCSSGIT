/* Mobile first approach */

/* General set of rules */

@font-face {
    font-family: 'Exo 2';
    src: url('./font-family/exo-2/Exo2-Regular.ttf');
    font-style: normal;
}

@font-face {
    font-family: 'Exo 2';
    src: url('./font-family/exo-2/Exo2-Italic.ttf');
    font-style: italic;
}

@font-face {
    font-family: 'Exo 2';
    src: url('./font-family/exo-2/Exo2-Bold.ttf');
    font-weight: bold;
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: 'Exo 2', serif;
    line-height: 1.6;
}

:root {
    --bright-red: rgb(242, 97, 53);
    --main-black: rgb(0, 0, 0);
    --support-blue: rgb(9, 161, 255);
    --white: rgb(255, 255, 255);
}

html {
    font-size: 62.5%; /* Targeting the root element and changing browsers' default font-size for making easy calculations: 1rem = 10px */
}

main {
    max-width: 95%; /* It looks nicer this way on models with curved sides of displays like Samsung Galaxy 8, 9 or Macbook to see where the scroll bar is*/
    margin: 0 auto; /* To center */
    background-image: url('./assets/background-picture.jpg');
    background-repeat: repeat; 
}

header {
    width: 95%;
    margin: 0 auto;
    min-height: 10rem;
    background-color: var(--main-black);
    border-bottom: 0.5rem solid var(--bright-red);
}

ul {
    list-style-position: inside;
    list-style-type: none;
    padding: 2rem;
}

h1, h2, h3 {
    text-align: center;
    text-transform: uppercase;
}

h1 {
    padding: 5rem 0;
    font-size: 6rem;
    color: var(--headers);
    -webkit-text-stroke: 0.2rem var(--bright-red); 
}

h2 {
    padding: 3rem 0;
    font-size: 4rem;
    color: var(--bright-red);
    -webkit-text-stroke: 0.1rem var(--main-black);
}

h3 {
    font-size: 1.6rem;
    padding: 0.5rem;
    color: var(--white);
    letter-spacing: 0.2rem;
    -webkit-text-stroke: 0.1rem var(--support-blue);   
}

p {
    font-size: 1.6rem;
    padding: 1rem;
    color: var(--white);
    height: 15rem;
    border-radius: 0 0 1rem 1rem;
    text-align: justify;
}

#grid-floats li {
    float: left;
}

#grid-flex {
    display: flex;
    flex-direction: column;
}

/* Set of rules for Images and List Items starts (animation on hover is included) */

img {
    max-width: 100%;
    background-color: var(--white); /* Some pictures' background are transparent, some ones white. I equaled all by making it white */
    filter: saturate(8); /* The colors of the pictures looked faint. I added some bright colors to make it look more fun */
    border-radius: 1rem 1rem 0 0;
    margin: 1rem 0;
}

.grid-item {
    padding: 1rem;
    border-radius: 5rem 2rem;
    background-color: var(--main-black);
    margin: 0 0 2rem 0;
    height: 60rem;
    box-shadow: 0 0 1rem var(--bright-red);
}

.grid-item:hover {
    box-shadow: 0 0 1rem 1rem var(--white);
}

.grid-item:hover img {
    animation: spanning;
    animation-duration: 1.5s;
    animation-delay: 0.5s;
}

@keyframes spanning {
    0% {
        transform: scaleX(1);
    }

    50% {
        transform: scaleX(-1);
    }

    100% {
        transform: scaleX(1);
    }
}

/* Set of rules for Images and List Items ends */

/* Tablets view starts */

@media only screen and (min-width: 600px) and (max-width: 1023px) {

    #grid-floats li:nth-child(n):nth-child(-n+2), #grid-flex li:nth-child(n):nth-child(-n+2) {
        width: calc(50% - 4rem);
    }

    #grid-floats li:nth-child(n+3):nth-child(-n+14), #grid-flex li:nth-child(n+3):nth-child(-n+14) {
        width: calc(33.3% - 4rem);
    }

    #grid-floats li, #grid-flex li {
        margin: 2rem;
    }

    main section:nth-child(2) {
        clear: both; /* It prevents the h2 ("Grid with flexbox") from going/jumping above - into the "Grid with floats" section in the layout */
    }

    #grid-flex {
        justify-content: space-around;
        flex-direction: row;
        flex-wrap: wrap;
    }

    /* Styling rules for both section start */

    img {
        display: block; /* to convert from inline into block, so I can center pictures in the grid item by margin: 0 auto; */
        width: 30rem;
        height: 20rem;
        margin: 2rem auto;
    }

    .grid-item {
        height: 55rem;
    }

    h3 {
        height: 6.7rem;
    }

    p {
        height: 20rem;
        overflow: auto;
    }

    /* Styling rules for both section end */
}

/* Tablets view ends */

/* Desktops view begins */

@media only screen and (min-width: 1024px) {
    
    #grid-floats li {
        height: 61rem;
        margin: 2rem;
    }

    #grid-floats li:first-child, #grid-floats li:last-child, #grid-flex li:first-child, #grid-flex li:last-child {
        width: calc(50% - 4rem);
    }

    #grid-floats li:nth-child(n+2):nth-child(-n+13), #grid-flex li:nth-child(n+2):nth-child(-n+13) {
        width: calc(25% - 4rem); 
    }

    main section:nth-child(2) {
        clear: both; /* It prevents the h2 ("Grid with flexbox") from going/jumping above - into the "Grid with floats" section in the layout */
    }

    #grid-flex {
        justify-content: space-around;
        flex-direction: row;
        flex-wrap: wrap;
    }

    h3 {
        font-size: 2rem;
        height: 10rem;
    }

    li:first-child img, li:last-child img  {
        display: block; 
        width: 70%; /* To be able to contain the picture and text inside of the <li> container, when the size of the viewer's screen is really big, like 1600px wide */
        margin: 0 auto;
    } 

    li:not(:first-child):not(:last-child) p {
        height: 27rem;
        overflow: auto;
    }
    
}

